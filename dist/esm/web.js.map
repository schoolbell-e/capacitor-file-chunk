{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,iBAAiB,CAAC;AAK1C,MAAM,OAAO,YAAa,SAAQ,SAAS;IACvC,gEAAgE;IAChE,eAAe;IACf,KAAK,CAAC,WAAW,CAAC,QAAgC;QAC9C,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAA;QACvD,OAAO;YACH,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,YAAY;YACrB,SAAS,EAAE,YAAY;YACvB,SAAS,EAAE,CAAC;YACZ,cAAc,EAAE,MAAM;YACtB,KAAK,EAAE,KAAK;SACf,CAAA;IACL,CAAC;IAED,gEAAgE;IAChE,cAAc;IACd,KAAK,CAAC,UAAU;QACZ,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAA;QACvD,aAAa;IACjB,CAAC;IAED,gEAAgE;IAChE,kBAAkB;IAClB,KAAK,CAAC,aAAa,CAAC,QAA4B;QAC5C,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAA;QACvD,OAAO,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC;IACtB,CAAC;CACJ","sourcesContent":["import {WebPlugin} from '@capacitor/core';\n\nimport type {FileChunkPlugin, FileChunkServerInfo, FileChunkConfiguration,FileChunkReadChunk, FileChunkReadChunkResponse} from './definitions';\n\n\nexport class FileChunkWeb extends WebPlugin implements FileChunkPlugin {\n    ////////////////////////////////////////////////////////////////\n    // START SERVER\n    async startServer(_options: FileChunkConfiguration): Promise<FileChunkServerInfo> {\n        console.warn('FileChunk does not work on the browser!')\n        return {\n            version: 2,\n            platform: 'web',\n            baseUrl: 'not-needed',\n            authToken: 'not-needed',\n            chunkSize: 0,\n            encryptionType: 'none',\n            ready: false\n        }\n    }\n\n    ////////////////////////////////////////////////////////////////\n    // STOP SERVER\n    async stopServer(): Promise<void> {\n        console.warn('FileChunk does not work on the browser!')\n        // DO NOTHING\n    }\n\n    ////////////////////////////////////////////////////////////////\n    // READ FILE CHUNK\n    async readFileChunk(_options: FileChunkReadChunk): Promise<FileChunkReadChunkResponse> {\n        console.warn('FileChunk does not work on the browser!')\n        return {data: ''};\n    }\n}\n"]}